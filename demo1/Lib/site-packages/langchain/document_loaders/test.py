from flask import Flask, request, jsonify
from flask_cors import CORS
import os
from pathlib import Path

app = Flask(__name__)
CORS(app)

from langchain.schema import Document
from peft import PeftModel, PeftConfig
from langchain.document_loaders.csv_loader import CSVLoader
from langchain.text_splitter import CharacterTextSplitter
from langchain.vectorstores import FAISS
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.document_loaders import TextLoader
from langchain.document_loaders import DirectoryLoader
from langchain.document_loaders import PyPDFDirectoryLoader

from langchain.embeddings import HuggingFaceEmbeddings
from transformers import AutoTokenizer, AutoModelForCausalLM, BitsAndBytesConfig
from transformers import TextStreamer, GenerationConfig

from transformers import AutoModelForCausalLM, AutoTokenizer
from langchain.retrievers import BM25Retriever, EnsembleRetriever
from langchain.vectorstores import Chroma
import torch
import re
import base64
import os
import unicodedata
import matplotlib.pyplot as plt
import matplotlib.image as img

current_working_directory = os.getcwd()
print(f"Current working directory: {current_working_directory}")

directory_to_load = Path("../../../flask-server/[FINAL] 텍스트 전처리 통합").resolve()
print(f"Absolute path of directory to load: {directory_to_load}")

# Check if the directory exists
if directory_to_load.exists():
    print("Directory exists.")
else:
    print("Directory does not exist.")